#### Version released on [31.03.12] ####

  Changes that (might) break backward compatibility:
  - QCPAbstractLegendItem now inherits from QObject
  - mousePress, mouseMove and mouseRelease signals are now emitted before and not after any QCustomPlot processing (range dragging, selecting, etc.)

  Added features:
  - Interaction system: now allows selecting of objects like plottables, axes, legend and plot title, see QCustomPlot::setInteractions documentation
  - Interaction system for plottables:
    * setSelectable, setSelected, setSelectedPen, setSelectedBrush, selectTest on QCPAbstractPlottable and all derived plottables
    * setSelectionTolerance on QCustomPlot
    * selectedPlottables and selectedGraphs on QCustomPlot (returns the list of currently selected plottables/graphs)
  - Interaction system for axes:
    * setSelectable, setSelected, setSelectedBasePen, setSelectedTickPen, setSelectedSubTickPen, setSelectedLabelFont, setSelectedTickLabelFont,
      setSelectedLabelColor, setSelectedTickLabelColor, selectTest on QCPAxis
    * selectedAxes on QCustomPlot (returns a list of the axes that currently have selected parts)
  - Interaction system for legend:
    * setSelectable, setSelected, setSelectedBorderPen, setSelectedIconBorderPen, setSelectedBrush, setSelectedFont, setSelectedTextColor, selectedItems on QCPLegend
    * setSelectedFont, setSelectedTextColor, setSelectable, setSelected on QCPAbstractLegendItem
    * selectedLegends on QCustomPlot
  - Interaction system for title:
    * setSelectedTitleFont, setSelectedTitleColor, setTitleSelected on QCustomPlot
  - new signals in accordance with the interaction system:
    * selectionChangedByUser on QCustomPlot
    * selectionChanged on QCPAbstractPlottable
    * selectionChanged on QCPAxis
    * selectionChanged on QCPLegend and QCPAbstractLegendItem
    * plottableClick, legendClick, axisClick, titleClick, plottableDoubleClick, legendDoubleClick, axisDoubleClick, titleDoubleClick on QCustomPlot
  - QCustomPlot::deselectAll (deselects everything, i.e. axes and plottables)
  - QCPAbstractPlottable::pixelsToCoords (inverse function to the already existing coordsToPixels function)
  - QCPRange::contains(double value)
  - QCPAxis::setLabelColor and setTickLabelColor
  - QCustomPlot::setTitleColor
  - QCustomPlot now emits beforeReplot and afterReplot signals. Note that it is safe to make two customPlots mutually call eachothers replot functions
    in one of these slots, it will not cause an infinite loop. (usefull for synchronizing axes ranges between two customPlots, because setRange alone doesn't replot)
  - If the Qt version is 4.7 or greater, the tick label strings in date-time-mode now support sub-second accuracy (e.g. with format like "hh:mm:ss.zzz").

  Bugfixes:
  - tick labels/margins should no longer oscillate by one pixel when dragging range or replotting repeatedly while changing e.g. data. This
    was caused by a bug in Qt's QFontMetrics::boundingRect function when the font has an integer point size (probably some rounding problem).
    The fix hence consists of creating a temporary font (only for bounding-box calculation) which is 0.05pt larger and thus avoiding the
    jittering rounding outcome.
  - tick label, axis label and plot title colors used to be undefined. This was fixed by providing explicit color properties.
    
  Other:
  - fixed some glitches in the documentation
  -  QCustomPlot::replot and QCustomPlot::rescaleAxes are now slots

#### Version released on [02.02.12] ####

  Changes that break backward compatibility:
  - renamed all secondary classes from QCustomPlot[...] to QCP[...]:
    QCustomPlotAxis -> QCPAxis
    QCustomPlotGraph -> QCPGraph
    QCustomPlotRange -> QCPRange
    QCustomPlotData -> QCPData
    QCustomPlotDataMap -> QCPDataMap
    QCustomPlotLegend -> QCPLegend
    QCustomPlotDataMapIterator -> QCPDataMapIterator
    QCustomPlotDataMutableMapIterator -> QCPDataMutableMapIterator
    A simple search and replace on all code files should make your code run again, e.g. consider the regex "QCustomPlot(?=[AGRDL])" -> "QCP".
    Make sure not to just replace "QCustomPlot" with "QCP" because the main class QCustomPlot hasn't changed to QCP.
    This change was necessary because class names became unhandy, pardon my bad naming decision in the beginning.
  - QCPAxis::tickLength() and QCPAxis::subTickLength() now each split into two functions for inward and outward ticks (tickLengthIn/tickLengthOut).  
  - QCPLegend now uses QCPAbstractLegendItem to carry item data (before, the legend was passed QCPGraphs directly)
  - QCustomPlot::addGraph() now doesn't return the index of the created graph anymore, but a pointer to the created QCPGraph.
  - QCustomPlot::setAutoAddGraphToLegend is replaced by setAutoAddPlottableToLegend

  Added features:
  - Reversed axis range with QCPAxis::setRangeReversed(bool)
  - Tick labels are now only drawn if not clipped by the viewport (widget border) on the sides (e.g. left and right on a horizontal axis).
  - Zerolines. Like grid lines only with a separate pen (QCPAxis::setZeroLinePen), at tick position zero.
  - Outward ticks. QCPAxis::setTickLength/setSubTickLength now accepts two arguments for inward and outward tick length. This doesn't break
    backward compatibility because the second argument (outward) has default value zero and thereby a call with one argument hasn't changed its meaning.
  - QCPGraph now inherits from QCPAbstractPlottable
  - QCustomPlot::addPlottable/plottable/removePlottable/clearPlottables added to interface with the new QCPAbstractPlottable-based system. The simpler interface
    which only acts on QCPGraphs (addGraph, graph, removeGraph, etc.) was adapted internally and is kept for backward compatibility and ease of use.
  - QCPLegend items for plottables (e.g. graphs) can automatically wrap their texts to fit the widths, see QCPLegend::setMinimumSize and QCPPlottableLegendItem::setTextWrap.
  - QCustomPlot::rescaleAxes. Adapts axis ranges to show all plottables/graphs, by calling QCPAbstractPlottable::rescaleAxes on all plottables in the plot.
  - QCPCurve. For plotting of parametric curves.
  - QCPBars. For plotting of bar charts.
  - QCPStatisticalBox. For statistical box plots.

  Bugfixes:
  - Fixed QCustomPlot::removeGraph(int) not being able to remove graph index 0
  - made QCustomPlot::replot() abort painting when painter initialization fails (e.g. because width/height of QCustomPlot is zero)
  - The distance of the axis label from the axis ignored the tick label padding, this could have caused overlapping axis labels and tick labels 
  - fixed memory leak in QCustomPlot (dtor didn't delete legend)
  - fixed bug that prevented QCPAxis::setRangeLower/Upper from setting the value to exactly 0.

  Other:
  - Changed default error bar handle size (QCustomPlotGraph::setErrorBarSize) from 4 to 6.
  - Removed QCustomPlotDataFetcher. Was deprecated and not used class.
  - Extended documentation, especially class descriptions.

#### Version released on [15.01.12] ####

  Changes that (might) break backward compatibility:
  - QCustomPlotGraph now inherits from QObject
  
  Added features:
  - Added axis background pixmap (QCustomPlot::setAxisBackground, setAxisBackgroundScaled, setAxisBackgroundScaledMode)
  - Added width and height parameter on PDF export function QCustomPlot::savePdf(). This now allows PDF export to
    have arbitrary dimensions, independent of the current geometry of the QCustomPlot.
  - Added overload of QCustomPlot::removeGraph that takes QCustomPlotGraph* as parameter, instead the index of the graph
  - Added all enums to the Qt meta system via Q_ENUMS(). The enums can now be transformed
    to QString values easily with the Qt meta system, which makes saving state e.g. as XML
    significantly nicer.
  - added typedef QMapIterator<double,QCustomPlotData> QCustomPlotDataMapIterator
    and typedef QMutableMapIterator<double,QCustomPlotData> QCustomPlotDataMutableMapIterator
    for improved information hiding, when using iterators outside QCustomPlot code
  
  Bugfixes:
  - Fixed savePngScaled. Axis/label drawing functions used to reset the painter transform
    and thereby break savePngScaled. Now they buffer the current transform and restore it afterwards.
  - Fixed some glitches in the doxygen comments (affects documentation only)
  
  Other:
  - Changed the default tickLabelPadding of top axis from 3 to 6 pixels. Looks better.
  - Changed the default QCustomPlot::setAntialiasedElements setting: Graph fills are now antialiased
    by default. That's a bit slower, but makes fill borders look better.

#### Version released on [19.11.11] ####

  Changes that break backward compatibility:
  - QCustomPlotAxis: tickFont and setTickFont renamed to tickLabelFont and setTickLabelFont (for
    naming consistency)

  Other:
  - QCustomPlotAxis: Added rotated tick labels, see setTickLabelRotation
    
