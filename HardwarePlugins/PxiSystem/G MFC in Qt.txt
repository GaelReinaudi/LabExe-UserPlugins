It is possible to use MFC classes within a Qt program.
The best to do first is to create a new project generated 
automatically by MFC (or the precise framework that you want to use and that needs MFC).
e.g. Ni-DAQmx for controlling the National Instruments system.

You need to #include stdafx.h where you need to use the MFC.
You should make sure all your Qt includes occur before MFC related includes
where possible (ie. stdafx.h). 

You have to ensure that: Project properties -> general -> Use of MFC : is set to "Use MFC in a Shared DLL"
maybe also: Project properties -> general -> character set : is set to "Use Multi-Byte Character Set"

Under some situations you may also have to undefine UNICODE as well:
CONFIG -= UNICODE
In Visual Studio, you can do this from: Project properties -> C/C++ -> preprocessor

With MFC you can also run into trouble with the VC++ magically chosen
c-library, as it wants to replace the standard main() routine with
AfxWinMain().
So you have to tell him to use main()
In Visual Studio, you can do this from: Project properties -> linker -> advanced : and type "mainCRTStartup"

_CrtSetDbgFlag( 0 );

